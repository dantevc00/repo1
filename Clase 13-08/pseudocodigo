1) Definir estructuras
a, b variables enteras      Var a,b:Entero
punteroA,punteroB punteros      Var punteroA,punteroB:↑(apunta)Entero
    ↓       ↓
    A       B
2)inicializacion/asignacion
a=5,b=22                    a ← 15
                            b ← 22 
punteroA ← direccion(A) | punteroB ← direccion(B)

3) Mostrar resultados
Mostrar(A) // 15
Mostrar(B) // 22
Mostrar(punteroA↑) // 15
Mostrar(punteroB↑) // 22

byRef (pasas la ref, se modifica el valor orignal, desde dentro de la funcion)
byVal (pasas una copia, la funcion no modif el dato original)

Ejercicio 3
Tengo que crear variable temporal entera, para intermcabiar sin perder datos (sin punteros)
-Con punteros
temp ← punteroA
punteroA↑ ← punteroB↑
punteroB↑ ← temp 

Array ← tipo de dato mas estructurado

Ejercicio 4 : 3|5|1|9|2|8
1)
Tipo    array : Entero
Var     min,max,indice: Entero
2)
array ← [3,5,1,9,2,8]
longitud(array) //  6
min ← array[0]
max ← array[0]
3)
Para i = 1 hasta longitud(arr) - 1
Si arr(i) > max
    max ← arr(i)
Si arr(i) < min 
    min ← arr(i)
fin para


-----------------------------------
EJ 8
arr ; Ent[] ---> [6,4,5,1,9]
mid : Ent[] => mid <- arr[]
largo : Ent <- long(arr)
Si largo%2 = 0
    mitad: Ent <_largo/2
    mids.agegar(arr(mitad-1))
    mids.agregar(arr(mitad))
fin si:
Sino 
    mitad: Ent <-largo//2
    mids.agegar(arr(mitad))
fin sino
Mostrar(mids)
-----------------------------------
EJ 9
arr1:Ent[],i:Ent <-0
arr2:Ent[]
son_iguales:Bool <- false
    para i=0 hasta long(arr1)-1
    Si arr1[i]==arr2[i]



    finsi
    sino
    break
    finsino
------------------------------------
EJ 9 con punteros
------------------------------------
Ej 6
arr:Ent[], i,j:Ent <-0
reverso:Ent[]
puntInicio:↑Ent
puntFin:↑Ent
puntInicio <- direccion(arr[0])
puntFin <-direccion(arr[long(arr)-1])
#sinpunteros
j<-long(arr)-1
para i=0 hasta long(arr)-1
    reverso[j] <- arr[i]
    j <- j-i
finpara
#ConPunteros
para i=0 hasta long(arr)-1
    reverso[i]<-puntFin↑
    puntFin <- puntFin-1
finpara

Otro EJ
Por valor 
funcion duplicar (numero:Ent): Entero
    numero <- numero*2
    devolver numero
finfuncion

Por referencia
Porced incrementar (refnumero: Ent)
    numero <- numero + 1
finproced




